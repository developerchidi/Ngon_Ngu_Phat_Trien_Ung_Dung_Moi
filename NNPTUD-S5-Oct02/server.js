const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');

// Import routes
const userRoutes = require('./routes/userRoutes');
const roleRoutes = require('./routes/roleRoutes');
const authRoutes = require('./routes/authRoutes');

const app = express();
const PORT = 3000;

// Middleware
app.use(cors());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// Serve static files
app.use(express.static(__dirname));

// Routes
app.use('/api/users', userRoutes);
app.use('/api/roles', roleRoutes);
app.use('/api/auth', authRoutes);

// Serve test page
app.get('/', (req, res) => {
  res.sendFile(__dirname + '/test.html');
});

// Health check endpoint
app.get('/api/health', (req, res) => {
  res.json({
    success: true,
    message: 'API ƒëang ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng',
    timestamp: new Date().toISOString()
  });
});

// Start server
app.listen(PORT, () => {
  console.log(`üöÄ Server ƒëang ch·∫°y t·∫°i http://localhost:${PORT}`);
  console.log(`üåê Giao di·ªán test: http://localhost:${PORT}`);
  console.log(`üìä API endpoints:`);
  console.log(`   GET    /api/health - Health check`);
  console.log(`   GET    /api/roles - L·∫•y t·∫•t c·∫£ roles`);
  console.log(`   GET    /api/roles/:id - L·∫•y role theo ID`);
  console.log(`   POST   /api/roles - T·∫°o role m·ªõi`);
  console.log(`   PUT    /api/roles/:id - C·∫≠p nh·∫≠t role`);
  console.log(`   DELETE /api/roles/:id - X√≥a m·ªÅm role`);
  console.log(`   GET    /api/users - L·∫•y t·∫•t c·∫£ users (c√≥ t√¨m ki·∫øm)`);
  console.log(`   GET    /api/users/:id - L·∫•y user theo ID`);
  console.log(`   GET    /api/users/username/:username - L·∫•y user theo username`);
  console.log(`   POST   /api/users - T·∫°o user m·ªõi`);
  console.log(`   PUT    /api/users/:id - C·∫≠p nh·∫≠t user`);
  console.log(`   DELETE /api/users/:id - X√≥a m·ªÅm user`);
  console.log(`   POST   /api/auth/login - Authentication`);
});

module.exports = app;
